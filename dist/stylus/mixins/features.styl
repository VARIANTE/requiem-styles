/**
 * Requiem-Styles
 * (c) VARIANTE (http://variante.io)
 *
 * This software is released under the MIT License:
 * http://www.opensource.org/licenses/mit-license.php
 */

/**
 * Applies font related rules.
 *
 * @param {List}   $family   - Font family.
 * @param {*}      [$size]   - Font size.
 * @param {number} [$weight] - Font weight.
 */
font($family, $size=null, $weight=null)
  font-family: comma-list($family)
  if $size != null
    font-size: $size
  if $weight != null
    font-weight: $weight

/**
 * Binds the content to the target selector based on the 'csstransitions'
 * feature (requires Modernizr).
 *
 * @param {boolean} [$enabled=true] - Specifies whether 'csstransitions' class
 *                                    is required.
 */
transition-detection($enabled=true)
  if $enabled == true and $modernizr-enabled == true
    .csstransitions &
      {block}
  else
    {block}

/**
 * Applies transition rules.
 *
 * @param {List} [$properties=all]        - Transition property(ies).
 * @param {List} [$durations=0s]          - Transition duration(s).
 * @param {List} [$timing-functions=ease] - Transition timing function(s).
 * @param {List} [$delays=0s]             - Transition delay(s).
 */
transition($properties=all, $durations=0s, $timing-functions=ease, $delays=0s)
  transition-property: comma-list($properties)
  transition-duration: comma-list($durations)
  transition-timing-function: comma-list($timing-functions)
  transition-delay: comma-list($delays)

/**
 * Binds the content to the target selector based on the 'cssanimations' feature
 * (requires Modernizr).
 *
 * @param {boolean} [$enabled=true] - Specifies whether 'cssanimations' class is
 *                                    required.
 */
animation-detection($enabled=true)
  if $enabled == true and $modernizr-enabled == true
    .cssanimations &
      {block}
  else
    {block}

/**
 * Binds the content to the target selector based on the 'touch' and 'no-touch'
 * feature (requires Modernizr).
 *
 * @param {boolean} [$enabled=true]    - Specifies whether 'touch' class is
 *                                       required.
 * @param {boolean} [$exclusive=false] - Specifies whether 'no-touch' class is
 *                                       required if $enabled is false.
 */
touch($enabled=true, $exclusive=false)
  if $enabled == true and $modernizr-enabled == true
    .touch &
      {block}
  else
    if $exclusive == true and $modernizr-enabled == true
      .no-touch &
        {block}
    else
      {block}

/**
 * Enables hardware acceleration for containing selector.
 */
hardware-acceleration()
  transform: translate3d(0, 0, 0)

/**
 * Enables/disables pointer events for target selector and all child selectors.
 *
 * @param {boolean} [$enabled=true]   - Specifies whether element should have
 *                                      pointer events enabled.
 * @param {boolean} [$recursive=true] - Specifies whether child elements should
 *                                      also be applied.
 * @param {boolean} [$forced=true]    - Specifies whether the behavior is tagged
 *                                      '!important'.
 */
pointable($enabled=true, $recursive=true, $forced=true)
  if $enabled == true
    if $recursive == true
      if $forced == true
        &, *
          pointer-events: initial !important
      else
        &, *
          pointer-events: initial
    else
      if $forced == true
        &
          pointer-events: initial !important
      else
        &
          pointer-events: initial
  else
    if $recursive == true
      if $forced == true
        &, *
          pointer-events: none !important
      else
        &, *
          pointer-events: none
    else
      if $forced == true
        &
          pointer-events: none !important
      else
        &
          pointer-events: none
