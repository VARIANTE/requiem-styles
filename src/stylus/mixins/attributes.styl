/**
 * Requiem-Styles
 * (c) VARIANTE (http://variante.io)
 *
 * This software is released under the MIT License:
 * http://www.opensource.org/licenses/mit-license.php
 */

/**
 * Selector for elements with the r-controller attribute.
 *
 * @param {String} $name r-controller attribute value.
 */
controller($name)
  [data-r-controller={$name}]
    {block}
  [r-controller={$name}]
    {block}

/**
 * Selector for elements with the r-instance attribute.
 *
 * @param {String} $name r-instance attribute value.
 */
instance($name)
  [data-r-instance={$name}]
    {block}
  [r-instance={$name}]
    {block}

/**
 * Selects elements with the specified r- key and value.
 *
 * @param {String} $key    r- key.
 * @param {String} $value  r- value, if applicable.
 * @param {String} $scope  Specifies the scope relative to the target selector
 *                         in which this property applies to (any, this, parent,
 *                         or child).
 */
property($key, $value=null, $scope='this')
  if $value == null
    if $scope == 'any'
      / [data-r-{$key}]
        {block}
      / [r-{$key}]
        {block}

    else if $scope == 'this'
      &[data-r-{$key}]
        {block}
      &[r-{$key}]
        {block}

    else if $scope == 'parent'
      [data-r-{$key}] &
        {block}
      [r-{$key}] &
        {block}

    else if $scope == 'child'
      &[data-r-{$key}] *
        {block}
      &[r-{$key}] *
        {block}

  else
    if $scope == 'any'
      / [data-r-{$key}={$value}]
        {block}
      / [r-{$key}={$value}]
        {block}

    else if $scope == 'this'
      &[data-r-{$key}={$value}]
        {block}
      &[r-{$key}={$value}]
        {block}

    else if $scope == 'parent'
      [data-r-{$key}={$value}] &
        {block}
      [r-{$key}={$value}] &
        {block}

    else if $scope == 'child'
      &[data-r-{$key}={$value}] *
        {block}
      &[r-{$key}={$value}] *
        {block}

/**
 * Binds the content to one/multiple r-states of the target selector. Option to
 * specify whether the state(s) are default.
 *
 * @param {List}    $states   List of state names.
 * @param {Boolean} $default  Specifies whether the class(es) are default.
 */
state($states, $default=false)
  for $state in $states
    if $state == 'hover'
      if $modernizr-enabled == true
        .no-touch &:hover
          {block}
        .no-touch &[data-r-state='hover']
          {block}
        .no-touch &[r-state='hover']
          {block}
      else
        &:hover
          {block}
        &[data-r-state='hover']
          {block}
        &[r-state='hover']
          {block}
    else
      &[data-r-state={$state}]
        {block}
      &[r-state={$state}]
        {block}

  if $default == true
    {block}

/**
 * Binds the content to a r-scheme of the target selector. Option to specify
 * whether the scheme is default.
 *
 * @param {String}  $scheme   Scheme name.
 * @param {Boolean} $default  Specifies whether the class(es) are default.
 * @param {String}  $scope    Specifies the scope relative to the target
 *                            selector in which this property applies to (any,
 *                            this, parent, or child).
 */
scheme($scheme, $default=false, $scope='this')
  if $scope == 'any'
    / [data-r-scheme={$scheme}]
      {block}
    / [r-scheme={$scheme}]
      {block}

    if $default == true
      / *
        {block}
  else if $scope == 'this'
    &[data-r-scheme={$scheme}]
      {block}
    &[r-scheme={$scheme}]
      {block}

    if $default == true
      {block}
  else if $scope == 'parent'
    [data-r-scheme={$scheme}] &
      {block}
    [r-scheme={$scheme}] &
      {block}

    if $default == true
      {block}
  else if $scope == 'child'
    &[data-r-scheme={$scheme}] *
      {block}
    &[r-scheme={$scheme}] *
      {block}

    if $default == true
      & *
        {block}
